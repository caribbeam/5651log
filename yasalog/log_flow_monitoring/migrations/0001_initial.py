# Generated by Django 4.2.7 on 2025-09-08 22:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("log_kayit", "0013_logkayit_cihaz_adi_logkayit_lokasyon_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="LogFlowMonitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Monitor Adı")),
                (
                    "monitor_type",
                    models.CharField(
                        choices=[
                            ("SYSLOG", "Syslog"),
                            ("FIREWALL", "Firewall"),
                            ("HOTSPOT", "Hotspot"),
                            ("MIRROR", "Mirror Traffic"),
                            ("TIMESTAMP", "Timestamp"),
                            ("GENERAL", "Genel"),
                        ],
                        max_length=20,
                        verbose_name="Monitor Tipi",
                    ),
                ),
                (
                    "source_device",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Kaynak Cihaz"
                    ),
                ),
                (
                    "source_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Kaynak IP"
                    ),
                ),
                (
                    "source_port",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Kaynak Port"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Aktif"),
                            ("INACTIVE", "Pasif"),
                            ("ERROR", "Hata"),
                            ("WARNING", "Uyarı"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                        verbose_name="Durum",
                    ),
                ),
                (
                    "is_receiving_logs",
                    models.BooleanField(default=True, verbose_name="Log Alıyor"),
                ),
                (
                    "last_log_received",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Log Alınma"
                    ),
                ),
                (
                    "last_heartbeat",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Heartbeat"
                    ),
                ),
                (
                    "total_logs_received",
                    models.BigIntegerField(default=0, verbose_name="Toplam Alınan Log"),
                ),
                (
                    "logs_per_minute",
                    models.IntegerField(default=0, verbose_name="Dakikada Log Sayısı"),
                ),
                (
                    "average_log_size",
                    models.IntegerField(
                        default=0, verbose_name="Ortalama Log Boyutu (byte)"
                    ),
                ),
                (
                    "warning_threshold_minutes",
                    models.IntegerField(
                        default=5,
                        help_text="Bu süre boyunca log gelmezse uyarı ver",
                        verbose_name="Uyarı Eşiği (dakika)",
                    ),
                ),
                (
                    "error_threshold_minutes",
                    models.IntegerField(
                        default=15,
                        help_text="Bu süre boyunca log gelmezse hata ver",
                        verbose_name="Hata Eşiği (dakika)",
                    ),
                ),
                (
                    "notify_on_warning",
                    models.BooleanField(default=True, verbose_name="Uyarıda Bildir"),
                ),
                (
                    "notify_on_error",
                    models.BooleanField(default=True, verbose_name="Hatada Bildir"),
                ),
                (
                    "notification_recipients",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış e-posta listesi",
                        verbose_name="Bildirim Alıcıları",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log Akış Monitörü",
                "verbose_name_plural": "Log Akış Monitörleri",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="LogFlowAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("NO_LOGS", "Log Gelmiyor"),
                            ("LOW_VOLUME", "Düşük Log Hacmi"),
                            ("HIGH_VOLUME", "Yüksek Log Hacmi"),
                            ("DEVICE_OFFLINE", "Cihaz Çevrimdışı"),
                            ("CONNECTION_LOST", "Bağlantı Kesildi"),
                            ("CONFIGURATION_ERROR", "Konfigürasyon Hatası"),
                        ],
                        max_length=30,
                        verbose_name="Uyarı Tipi",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Düşük"),
                            ("MEDIUM", "Orta"),
                            ("HIGH", "Yüksek"),
                            ("CRITICAL", "Kritik"),
                        ],
                        max_length=15,
                        verbose_name="Önem Seviyesi",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Başlık")),
                ("message", models.TextField(verbose_name="Mesaj")),
                (
                    "details",
                    models.JSONField(blank=True, default=dict, verbose_name="Detaylar"),
                ),
                (
                    "detected_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Tespit Zamanı"
                    ),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Kabul Zamanı"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Çözülme Zamanı"
                    ),
                ),
                (
                    "is_acknowledged",
                    models.BooleanField(default=False, verbose_name="Kabul Edildi"),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="Çözüldü"),
                ),
                (
                    "notification_sent",
                    models.BooleanField(
                        default=False, verbose_name="Bildirim Gönderildi"
                    ),
                ),
                (
                    "notification_sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Bildirim Zamanı"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "monitor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_flow_monitoring.logflowmonitor",
                        verbose_name="Monitör",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log Akış Uyarısı",
                "verbose_name_plural": "Log Akış Uyarıları",
                "ordering": ["-detected_at"],
            },
        ),
        migrations.CreateModel(
            name="LogFlowStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Tarih")),
                (
                    "hour",
                    models.IntegerField(
                        help_text="0-23 arası saat", verbose_name="Saat"
                    ),
                ),
                (
                    "total_logs",
                    models.BigIntegerField(default=0, verbose_name="Toplam Log"),
                ),
                (
                    "total_bytes",
                    models.BigIntegerField(default=0, verbose_name="Toplam Byte"),
                ),
                (
                    "average_log_size",
                    models.IntegerField(default=0, verbose_name="Ortalama Log Boyutu"),
                ),
                (
                    "peak_logs_per_minute",
                    models.IntegerField(default=0, verbose_name="Pik Log/Dakika"),
                ),
                (
                    "uptime_minutes",
                    models.IntegerField(default=60, verbose_name="Uptime (dakika)"),
                ),
                (
                    "downtime_minutes",
                    models.IntegerField(default=0, verbose_name="Downtime (dakika)"),
                ),
                (
                    "alert_count",
                    models.IntegerField(default=0, verbose_name="Uyarı Sayısı"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "monitor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_flow_monitoring.logflowmonitor",
                        verbose_name="Monitör",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log Akış İstatistiği",
                "verbose_name_plural": "Log Akış İstatistikleri",
                "ordering": ["-date", "-hour"],
                "unique_together": {("company", "monitor", "date", "hour")},
            },
        ),
    ]
