# Generated by Django 4.2.7 on 2025-09-08 16:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("log_kayit", "0012_alter_logkayit_company"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Kanal Adı")),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "E-posta"),
                            ("sms", "SMS"),
                            ("push", "Push Bildirim"),
                            ("webhook", "Webhook"),
                            ("slack", "Slack"),
                            ("teams", "Microsoft Teams"),
                            ("telegram", "Telegram"),
                            ("discord", "Discord"),
                        ],
                        max_length=20,
                        verbose_name="Kanal Tipi",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "priority",
                    models.IntegerField(
                        default=1,
                        help_text="Düşük sayı = Yüksek öncelik",
                        verbose_name="Öncelik",
                    ),
                ),
                (
                    "smtp_host",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="SMTP Host"
                    ),
                ),
                (
                    "smtp_port",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="SMTP Port"
                    ),
                ),
                (
                    "smtp_username",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="SMTP Kullanıcı"
                    ),
                ),
                (
                    "smtp_password",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="SMTP Şifre"
                    ),
                ),
                (
                    "smtp_use_tls",
                    models.BooleanField(default=True, verbose_name="TLS Kullan"),
                ),
                (
                    "from_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Gönderen E-posta"
                    ),
                ),
                (
                    "sms_provider",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="SMS Sağlayıcı"
                    ),
                ),
                (
                    "sms_api_key",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="SMS API Anahtarı"
                    ),
                ),
                (
                    "sms_api_secret",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="SMS API Gizli Anahtarı",
                    ),
                ),
                (
                    "sms_sender_id",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="SMS Gönderen ID"
                    ),
                ),
                (
                    "webhook_url",
                    models.URLField(blank=True, verbose_name="Webhook URL"),
                ),
                (
                    "webhook_secret",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Webhook Gizli Anahtarı",
                    ),
                ),
                (
                    "webhook_headers",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Webhook Başlıkları"
                    ),
                ),
                (
                    "slack_webhook_url",
                    models.URLField(blank=True, verbose_name="Slack Webhook URL"),
                ),
                (
                    "slack_channel",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Slack Kanal"
                    ),
                ),
                (
                    "slack_username",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Slack Kullanıcı Adı"
                    ),
                ),
                (
                    "teams_webhook_url",
                    models.URLField(blank=True, verbose_name="Teams Webhook URL"),
                ),
                (
                    "telegram_bot_token",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Telegram Bot Token"
                    ),
                ),
                (
                    "telegram_chat_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Telegram Chat ID"
                    ),
                ),
                (
                    "discord_webhook_url",
                    models.URLField(blank=True, verbose_name="Discord Webhook URL"),
                ),
                (
                    "test_mode",
                    models.BooleanField(default=False, verbose_name="Test Modu"),
                ),
                (
                    "test_recipients",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış test alıcı listesi",
                        verbose_name="Test Alıcıları",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim Kanalı",
                "verbose_name_plural": "Bildirim Kanalları",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Şablon Adı")),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("security_alert", "Güvenlik Uyarısı"),
                            ("system_alert", "Sistem Uyarısı"),
                            ("report_ready", "Rapor Hazır"),
                            ("report_failed", "Rapor Başarısız"),
                            ("user_activity", "Kullanıcı Aktivitesi"),
                            ("compliance_alert", "Uyumluluk Uyarısı"),
                            ("performance_alert", "Performans Uyarısı"),
                            ("maintenance", "Bakım Bildirimi"),
                            ("custom", "Özel"),
                        ],
                        max_length=30,
                        verbose_name="Şablon Tipi",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Açıklama")),
                (
                    "email_subject",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="E-posta Konusu"
                    ),
                ),
                (
                    "email_body_html",
                    models.TextField(blank=True, verbose_name="E-posta HTML İçeriği"),
                ),
                (
                    "email_body_text",
                    models.TextField(blank=True, verbose_name="E-posta Metin İçeriği"),
                ),
                (
                    "sms_message",
                    models.TextField(
                        blank=True, max_length=160, verbose_name="SMS Mesajı"
                    ),
                ),
                (
                    "push_title",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Push Başlık"
                    ),
                ),
                ("push_body", models.TextField(blank=True, verbose_name="Push İçerik")),
                (
                    "push_icon",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Push İkon"
                    ),
                ),
                (
                    "webhook_payload",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Webhook Payload"
                    ),
                ),
                (
                    "slack_message",
                    models.TextField(blank=True, verbose_name="Slack Mesajı"),
                ),
                (
                    "slack_color",
                    models.CharField(
                        blank=True,
                        default="good",
                        max_length=20,
                        verbose_name="Slack Renk",
                    ),
                ),
                (
                    "teams_title",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Teams Başlık"
                    ),
                ),
                (
                    "teams_message",
                    models.TextField(blank=True, verbose_name="Teams Mesajı"),
                ),
                (
                    "telegram_message",
                    models.TextField(blank=True, verbose_name="Telegram Mesajı"),
                ),
                (
                    "telegram_parse_mode",
                    models.CharField(
                        choices=[("HTML", "HTML"), ("Markdown", "Markdown")],
                        default="HTML",
                        max_length=20,
                        verbose_name="Telegram Parse Modu",
                    ),
                ),
                (
                    "discord_embed",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Discord Embed"
                    ),
                ),
                (
                    "available_variables",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış değişken listesi",
                        verbose_name="Kullanılabilir Değişkenler",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="Varsayılan"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Oluşturan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim Şablonu",
                "verbose_name_plural": "Bildirim Şablonları",
                "ordering": ["template_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Kural Adı")),
                ("description", models.TextField(blank=True, verbose_name="Açıklama")),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("immediate", "Anında"),
                            ("threshold", "Eşik Aşımı"),
                            ("schedule", "Zamanlanmış"),
                            ("event", "Olay Bazlı"),
                            ("condition", "Koşul Bazlı"),
                        ],
                        max_length=20,
                        verbose_name="Tetikleme Tipi",
                    ),
                ),
                (
                    "trigger_condition",
                    models.TextField(blank=True, verbose_name="Tetikleme Koşulu"),
                ),
                (
                    "threshold_value",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Eşik Değeri"
                    ),
                ),
                (
                    "time_window",
                    models.IntegerField(
                        default=5, verbose_name="Zaman Penceresi (dakika)"
                    ),
                ),
                (
                    "filter_conditions",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Filtre Koşulları"
                    ),
                ),
                (
                    "severity_levels",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Önem Seviyeleri"
                    ),
                ),
                (
                    "recipients",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış alıcı listesi",
                        verbose_name="Alıcılar",
                    ),
                ),
                (
                    "schedule_cron",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Cron Zamanlama"
                    ),
                ),
                (
                    "schedule_timezone",
                    models.CharField(
                        default="Europe/Istanbul",
                        max_length=50,
                        verbose_name="Zaman Dilimi",
                    ),
                ),
                (
                    "max_notifications_per_hour",
                    models.IntegerField(
                        default=10, verbose_name="Saatlik Maksimum Bildirim"
                    ),
                ),
                (
                    "max_notifications_per_day",
                    models.IntegerField(
                        default=50, verbose_name="Günlük Maksimum Bildirim"
                    ),
                ),
                (
                    "cooldown_period",
                    models.IntegerField(
                        default=30, verbose_name="Bekleme Süresi (dakika)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "last_triggered",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Tetiklenme"
                    ),
                ),
                (
                    "trigger_count",
                    models.IntegerField(default=0, verbose_name="Tetiklenme Sayısı"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "channels",
                    models.ManyToManyField(
                        to="notification_system.notificationchannel",
                        verbose_name="Kanallar",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Oluşturan",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification_system.notificationtemplate",
                        verbose_name="Şablon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim Kuralı",
                "verbose_name_plural": "Bildirim Kuralları",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipient", models.CharField(max_length=200, verbose_name="Alıcı")),
                (
                    "subject",
                    models.CharField(blank=True, max_length=300, verbose_name="Konu"),
                ),
                ("message", models.TextField(verbose_name="Mesaj")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Bekliyor"),
                            ("sending", "Gönderiliyor"),
                            ("sent", "Gönderildi"),
                            ("delivered", "Teslim Edildi"),
                            ("failed", "Başarısız"),
                            ("cancelled", "İptal Edildi"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Durum",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Hata Mesajı"),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Zamanlanmış Zaman"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Gönderilme Zamanı"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Teslim Zamanı"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Meta Veriler"
                    ),
                ),
                (
                    "retry_count",
                    models.IntegerField(
                        default=0, verbose_name="Yeniden Deneme Sayısı"
                    ),
                ),
                (
                    "max_retries",
                    models.IntegerField(
                        default=3, verbose_name="Maksimum Yeniden Deneme"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification_system.notificationchannel",
                        verbose_name="Kanal",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification_system.notificationrule",
                        verbose_name="Kural",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification_system.notificationtemplate",
                        verbose_name="Şablon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim Logu",
                "verbose_name_plural": "Bildirim Logları",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_enabled",
                    models.BooleanField(default=True, verbose_name="E-posta Aktif"),
                ),
                (
                    "sms_enabled",
                    models.BooleanField(default=False, verbose_name="SMS Aktif"),
                ),
                (
                    "push_enabled",
                    models.BooleanField(default=True, verbose_name="Push Aktif"),
                ),
                (
                    "security_alerts",
                    models.BooleanField(
                        default=True, verbose_name="Güvenlik Uyarıları"
                    ),
                ),
                (
                    "system_alerts",
                    models.BooleanField(default=True, verbose_name="Sistem Uyarıları"),
                ),
                (
                    "report_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Rapor Bildirimleri"
                    ),
                ),
                (
                    "maintenance_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Bakım Bildirimleri"
                    ),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Sessiz Saatler Başlangıç"
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Sessiz Saatler Bitiş"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Istanbul",
                        max_length=50,
                        verbose_name="Zaman Dilimi",
                    ),
                ),
                (
                    "max_daily_notifications",
                    models.IntegerField(
                        default=20, verbose_name="Günlük Maksimum Bildirim"
                    ),
                ),
                (
                    "max_weekly_notifications",
                    models.IntegerField(
                        default=100, verbose_name="Haftalık Maksimum Bildirim"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Kullanıcı",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildirim Aboneliği",
                "verbose_name_plural": "Bildirim Abonelikleri",
                "ordering": ["user__username"],
                "unique_together": {("company", "user")},
            },
        ),
    ]
