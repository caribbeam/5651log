# Generated by Django 4.2.7 on 2025-09-06 13:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("log_kayit", "0012_alter_logkayit_company"),
    ]

    operations = [
        migrations.CreateModel(
            name="MirrorConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Konfigürasyon Adı"),
                ),
                (
                    "config_type",
                    models.CharField(
                        choices=[
                            ("SPAN", "SPAN (Switch Port Analyzer)"),
                            ("RSPAN", "RSPAN (Remote SPAN)"),
                            ("ERSPAN", "ERSPAN (Encapsulated RSPAN)"),
                            ("MIRROR", "Port Mirroring"),
                        ],
                        max_length=20,
                        verbose_name="Konfigürasyon Tipi",
                    ),
                ),
                (
                    "source_ports",
                    models.TextField(
                        help_text="Virgülle ayrılmış port listesi",
                        verbose_name="Kaynak Portlar",
                    ),
                ),
                (
                    "source_vlans",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış VLAN ID listesi",
                        verbose_name="Kaynak VLAN'lar",
                    ),
                ),
                (
                    "destination_port",
                    models.CharField(max_length=50, verbose_name="Hedef Port"),
                ),
                (
                    "destination_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Hedef IP"
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("BOTH", "Her İki Yön"),
                            ("TX", "Sadece Gönderim"),
                            ("RX", "Sadece Alım"),
                        ],
                        default="BOTH",
                        max_length=20,
                        verbose_name="Yön",
                    ),
                ),
                (
                    "protocol_filter",
                    models.CharField(
                        blank=True,
                        help_text="TCP, UDP, ICMP vb.",
                        max_length=100,
                        verbose_name="Protokol Filtresi",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                ("is_enabled", models.BooleanField(default=True, verbose_name="Etkin")),
                (
                    "max_bandwidth",
                    models.IntegerField(
                        default=1000, verbose_name="Maksimum Bant Genişliği (Mbps)"
                    ),
                ),
                (
                    "buffer_size",
                    models.IntegerField(default=100, verbose_name="Buffer Boyutu (MB)"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mirror Konfigürasyonu",
                "verbose_name_plural": "Mirror Konfigürasyonları",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MirrorDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Cihaz Adı")),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("SWITCH", "Switch"),
                            ("ROUTER", "Router"),
                            ("FIREWALL", "Firewall"),
                            ("ACCESS_POINT", "Access Point"),
                            ("OTHER", "Diğer"),
                        ],
                        max_length=20,
                        verbose_name="Cihaz Tipi",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP Adresi")),
                (
                    "mac_address",
                    models.CharField(
                        blank=True, max_length=17, verbose_name="MAC Adresi"
                    ),
                ),
                (
                    "model",
                    models.CharField(blank=True, max_length=100, verbose_name="Model"),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Üretici"
                    ),
                ),
                (
                    "mirror_supported",
                    models.BooleanField(default=True, verbose_name="Mirror Desteği"),
                ),
                (
                    "max_mirror_ports",
                    models.IntegerField(default=4, verbose_name="Maksimum Mirror Port"),
                ),
                (
                    "current_mirror_ports",
                    models.IntegerField(default=0, verbose_name="Mevcut Mirror Port"),
                ),
                (
                    "is_online",
                    models.BooleanField(default=False, verbose_name="Çevrimiçi"),
                ),
                (
                    "last_seen",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Görülme"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mirror Cihazı",
                "verbose_name_plural": "Mirror Cihazları",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VLANConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vlan_id",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(4094),
                        ],
                        verbose_name="VLAN ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="VLAN Adı")),
                ("description", models.TextField(blank=True, verbose_name="Açıklama")),
                (
                    "subnet",
                    models.CharField(
                        help_text="192.168.1.0/24", max_length=18, verbose_name="Subnet"
                    ),
                ),
                (
                    "gateway",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Gateway"
                    ),
                ),
                (
                    "dns_servers",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış",
                        verbose_name="DNS Sunucuları",
                    ),
                ),
                (
                    "mirror_enabled",
                    models.BooleanField(default=True, verbose_name="Mirror Etkin"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncellenme Tarihi"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "mirror_config",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mirror_port.mirrorconfiguration",
                        verbose_name="Mirror Konfigürasyonu",
                    ),
                ),
            ],
            options={
                "verbose_name": "VLAN Konfigürasyonu",
                "verbose_name_plural": "VLAN Konfigürasyonları",
                "ordering": ["vlan_id"],
                "unique_together": {("company", "vlan_id")},
            },
        ),
        migrations.CreateModel(
            name="MirrorTraffic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_ip", models.GenericIPAddressField(verbose_name="Kaynak IP")),
                (
                    "destination_ip",
                    models.GenericIPAddressField(verbose_name="Hedef IP"),
                ),
                (
                    "source_port",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Kaynak Port"
                    ),
                ),
                (
                    "destination_port",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Hedef Port"
                    ),
                ),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("TCP", "TCP"),
                            ("UDP", "UDP"),
                            ("ICMP", "ICMP"),
                            ("HTTP", "HTTP"),
                            ("HTTPS", "HTTPS"),
                            ("FTP", "FTP"),
                            ("SSH", "SSH"),
                            ("OTHER", "Diğer"),
                        ],
                        max_length=10,
                        verbose_name="Protokol",
                    ),
                ),
                (
                    "bytes_sent",
                    models.BigIntegerField(default=0, verbose_name="Gönderilen Byte"),
                ),
                (
                    "bytes_received",
                    models.BigIntegerField(default=0, verbose_name="Alınan Byte"),
                ),
                (
                    "packets_sent",
                    models.IntegerField(default=0, verbose_name="Gönderilen Paket"),
                ),
                (
                    "packets_received",
                    models.IntegerField(default=0, verbose_name="Alınan Paket"),
                ),
                ("start_time", models.DateTimeField(verbose_name="Başlangıç Zamanı")),
                ("end_time", models.DateTimeField(verbose_name="Bitiş Zamanı")),
                ("duration", models.FloatField(verbose_name="Süre (saniye)")),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Content Type"
                    ),
                ),
                (
                    "is_suspicious",
                    models.BooleanField(default=False, verbose_name="Şüpheli"),
                ),
                (
                    "threat_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Düşük"),
                            ("MEDIUM", "Orta"),
                            ("HIGH", "Yüksek"),
                            ("CRITICAL", "Kritik"),
                        ],
                        default="LOW",
                        max_length=20,
                        verbose_name="Tehdit Seviyesi",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Zaman"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "mirror_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mirror_port.mirrorconfiguration",
                        verbose_name="Mirror Konfigürasyonu",
                    ),
                ),
                (
                    "vlan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mirror_port.vlanconfiguration",
                        verbose_name="VLAN",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mirror Trafik",
                "verbose_name_plural": "Mirror Trafik",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["company", "timestamp"],
                        name="mirror_port_company_e71ebd_idx",
                    ),
                    models.Index(
                        fields=["mirror_config", "timestamp"],
                        name="mirror_port_mirror__da79e4_idx",
                    ),
                    models.Index(
                        fields=["source_ip", "destination_ip"],
                        name="mirror_port_source__7b762e_idx",
                    ),
                    models.Index(
                        fields=["protocol", "timestamp"],
                        name="mirror_port_protoco_c8c78e_idx",
                    ),
                    models.Index(
                        fields=["is_suspicious", "threat_level"],
                        name="mirror_port_is_susp_24d60e_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MirrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("CONFIG_UPDATE", "Konfigürasyon Güncelleme"),
                            ("PORT_MIRROR", "Port Mirror"),
                            ("VLAN_MIRROR", "VLAN Mirror"),
                            ("TRAFFIC_CAPTURE", "Trafik Yakalama"),
                            ("ERROR", "Hata"),
                            ("WARNING", "Uyarı"),
                        ],
                        max_length=20,
                        verbose_name="Log Tipi",
                    ),
                ),
                ("message", models.TextField(verbose_name="Mesaj")),
                (
                    "details",
                    models.JSONField(blank=True, default=dict, verbose_name="Detaylar"),
                ),
                (
                    "traffic_volume",
                    models.BigIntegerField(
                        default=0, verbose_name="Trafik Hacmi (byte)"
                    ),
                ),
                (
                    "packet_count",
                    models.IntegerField(default=0, verbose_name="Paket Sayısı"),
                ),
                (
                    "duration",
                    models.FloatField(default=0, verbose_name="Süre (saniye)"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Zaman"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="log_kayit.company",
                        verbose_name="Şirket",
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mirror_port.mirrordevice",
                        verbose_name="Cihaz",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mirror Logu",
                "verbose_name_plural": "Mirror Logları",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["company", "timestamp"],
                        name="mirror_port_company_d80f10_idx",
                    ),
                    models.Index(
                        fields=["device", "timestamp"],
                        name="mirror_port_device__84e62b_idx",
                    ),
                    models.Index(
                        fields=["log_type", "timestamp"],
                        name="mirror_port_log_typ_9f8b54_idx",
                    ),
                ],
            },
        ),
    ]
